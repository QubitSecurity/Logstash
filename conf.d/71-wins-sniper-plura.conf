### 71-wins-sniper-plura.conf
### for wins sniper log

input {
   file {
     path => "/var/log/plura/app-wins-sniper-100.log"
     start_position => "beginning"
     sincedb_path => "/etc/logstash/NUL_wins_sniper-100"
   }
}

filter {

  grok {
    patterns_dir => ["/etc/logstash/patterns.d/"]
    match => { "message" => "%{PLURAWINSSNIPER}" }
  }

#  if "_grokparsefailure" in [tags] { drop {} }

  mutate{
#    rename       => {"@timestamp" => "timegenerated" }
    rename       => {"message" => "msg"}

    add_field    => {"Attack_Name" => "(%{Attack_cord}) %{Attack_reason}"}
#   add_field    => {"Protocol" => "(%{ProtocolMethod})/%{ProtocolPort}"}

    add_field    => {"Information" => "%{1}/%{2}/%{3}"}

    add_field    => {"Time" => "%{tYEAR}/%{tMONTHNUM}/%{tMONTHDAY} %{tHOUR}:%{tMINUTE}:%{tSECOND}"}

    add_field    => {"resourceId" => "wins-sniper"}

    remove_field => ["@timestamp","@version","path","host"]

    remove_field => ["HOST"]
    remove_field => ["DATE1","tYEAR","tMONTHNUM","tMONTHDAY","tHOUR","tMINUTE","tSECOND"]
    remove_field => ["1","2","3"]
    remove_field => ["Attack_cord","Attack_reason","SNIPER","SrcPort"]
  }
}

output {
#        stdout { codec => rubydebug }
        file { 
                codec => "json_lines"
                path  => ["/var/log/plura/app-logstash-wins-sniper.log"]
        }
}
